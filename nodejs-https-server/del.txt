[33m[nodemon] 2.0.7[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,json[39m
[32m[nodemon] starting `node ./bin/www`[39m
imgur.js - Running
twitter.js - Running
listening on port 3000...
[0mGET / [32m200 [0m7877.330 ms - 2758[0m
[0mGET /stylesheets/style.css [32m200 [0m11.739 ms - 832[0m
IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     paused: true,
     emitClose: true,
     autoDestroy: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 57 7a 43 43 41 6b 4f 67 41 77 49 42 41 67 49 55 59 33 ... >,
        honorCipherOrder: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '96607960bb02f724aa7e02b5e68e2373',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 6 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _requestCert: false,
     _rejectUnauthorized: true,
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 42696 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 31,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 19870,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 82,
        [Symbol(triggerId)]: 39 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(error-emitted)]: false },
  connection:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 57 7a 43 43 41 6b 4f 67 41 77 49 42 41 67 49 55 59 33 ... >,
        honorCipherOrder: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '96607960bb02f724aa7e02b5e68e2373',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 6 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _requestCert: false,
     _rejectUnauthorized: true,
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 42696 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 31,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 19870,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 82,
        [Symbol(triggerId)]: 39 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(error-emitted)]: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'user-agent':
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
     accept: '*/*',
     'sec-fetch-site': 'same-origin',
     'sec-fetch-mode': 'cors',
     'sec-fetch-dest': 'empty',
     referer: 'https://localhost:3000/',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9,es;q=0.8' },
  rawHeaders:
   [ 'Host',
     'localhost:3000',
     'Connection',
     'keep-alive',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
     'Accept',
     '*/*',
     'Sec-Fetch-Site',
     'same-origin',
     'Sec-Fetch-Mode',
     'cors',
     'Sec-Fetch-Dest',
     'empty',
     'Referer',
     'https://localhost:3000/',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'en-US,en;q=0.9,es;q=0.8' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/imgur',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 57 7a 43 43 41 6b 4f 67 41 77 49 42 41 67 49 55 59 33 ... >,
        honorCipherOrder: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '96607960bb02f724aa7e02b5e68e2373',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 6 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _requestCert: false,
     _rejectUnauthorized: true,
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 42696 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 31,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 19870,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 82,
        [Symbol(triggerId)]: 39 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(error-emitted)]: false },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '/logic',
  originalUrl: '/logic/imgur',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/imgur',
     path: '/imgur',
     href: '/imgur',
     _raw: '/imgur' },
  params: {},
  query: {},
  res:
   ServerResponse {
     _events:
      [Object: null prototype] { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 19870,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 82,
           [Symbol(triggerId)]: 39 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(error-emitted)]: false },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 19870,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 82,
           [Symbol(triggerId)]: 39 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(error-emitted)]: false },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: [Object: null prototype] {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]: [Object: null prototype] { 'x-powered-by': [Array] } },
  _startAt: [ 11234, 347820315 ],
  _startTime: 2021-01-20T02:53:13.360Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: [Object: null prototype] {},
  signedCookies: [Object: null prototype] {},
  _parsedOriginalUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/logic/imgur',
     path: '/logic/imgur',
     href: '/logic/imgur',
     _raw: '/logic/imgur' },
  route:
   Route { path: '/imgur', stack: [ [Layer] ], methods: { get: true } } }
ServerResponse {
  _events:
   [Object: null prototype] {
     finish: [ [Function: bound resOnFinish], [Function: onevent] ],
     end: [Function: onevent] },
  _eventsCount: 2,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 57 7a 43 43 41 6b 4f 67 41 77 49 42 41 67 49 55 59 33 ... >,
        honorCipherOrder: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '96607960bb02f724aa7e02b5e68e2373',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 6 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _requestCert: false,
     _rejectUnauthorized: true,
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     _peername: { address: '::1', family: 'IPv6', port: 42696 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 31,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 19870,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 82,
        [Symbol(triggerId)]: 39 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(error-emitted)]: false },
  connection:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... >,
        cert:
         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 57 7a 43 43 41 6b 4f 67 41 77 49 42 41 67 49 55 59 33 ... >,
        honorCipherOrder: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '96607960bb02f724aa7e02b5e68e2373',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 6,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 6 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _requestCert: false,
     _rejectUnauthorized: true,
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     _peername: { address: '::1', family: 'IPv6', port: 42696 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onread: [Function: onStreamRead],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 9525,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 31,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 19870,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 82,
        [Symbol(triggerId)]: 39 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(error-emitted)]: false },
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: true,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 19870,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 82,
           [Symbol(triggerId)]: 39 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(error-emitted)]: false },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 19870,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 82,
           [Symbol(triggerId)]: 39 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(error-emitted)]: false },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { host: 'localhost:3000',
        connection: 'keep-alive',
        'user-agent':
         'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
        accept: '*/*',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'https://localhost:3000/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9,es;q=0.8' },
     rawHeaders:
      [ 'Host',
        'localhost:3000',
        'Connection',
        'keep-alive',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
        'Accept',
        '*/*',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'https://localhost:3000/',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'en-US,en;q=0.9,es;q=0.8' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '/imgur',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 31,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 19870,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 82,
           [Symbol(triggerId)]: 39 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(error-emitted)]: false },
     _consuming: false,
     _dumped: false,
     next: [Function: next],
     baseUrl: '/logic',
     originalUrl: '/logic/imgur',
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/imgur',
        path: '/imgur',
        href: '/imgur',
        _raw: '/imgur' },
     params: {},
     query: {},
     res: [Circular],
     _startAt: [ 11234, 347820315 ],
     _startTime: 2021-01-20T02:53:13.360Z,
     _remoteAddress: '::1',
     body: {},
     secret: undefined,
     cookies: [Object: null prototype] {},
     signedCookies: [Object: null prototype] {},
     _parsedOriginalUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/logic/imgur',
        path: '/logic/imgur',
        href: '/logic/imgur',
        _raw: '/logic/imgur' },
     route: Route { path: '/imgur', stack: [Array], methods: [Object] } },
  locals: [Object: null prototype] {},
  _startAt: undefined,
  _startTime: undefined,
  writeHead: [Function: writeHead],
  __onFinished: { [Function: listener] queue: [ [Function: logRequest] ] },
  [Symbol(isCorked)]: false,
  [Symbol(outHeadersKey)]:
   [Object: null prototype] { 'x-powered-by': [ 'X-Powered-By', 'Express' ] } }
[0mGET /logic/imgur [31m500 [0m60.351 ms - 2354[0m
